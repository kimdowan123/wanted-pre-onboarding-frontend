[{"C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\addData.js":"1","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\deleteData.js":"2","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\getData.js":"3","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\reviseCheck.js":"4","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\reviseText.js":"5","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\signIn.js":"6","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\signUp.js":"7","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\App.js":"8","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\App.test.js":"9","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\index.js":"10","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\login\\components\\SignIn.js":"11","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\login\\components\\SignUpModal.js":"12","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\login\\LoginPage.js":"13","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\todo\\components\\LogoutBtn.js":"14","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\todo\\components\\TodoList.js":"15","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\todo\\components\\TodoProducer.js":"16","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\todo\\TodoPage.js":"17","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\reportWebVitals.js":"18","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\setupTests.js":"19"},{"size":564,"mtime":1672117237415,"results":"20","hashOfConfig":"21"},{"size":473,"mtime":1672117237426,"results":"22","hashOfConfig":"21"},{"size":444,"mtime":1672117237441,"results":"23","hashOfConfig":"21"},{"size":629,"mtime":1672117237457,"results":"24","hashOfConfig":"21"},{"size":699,"mtime":1672117237469,"results":"25","hashOfConfig":"21"},{"size":552,"mtime":1672117237479,"results":"26","hashOfConfig":"21"},{"size":521,"mtime":1672117237491,"results":"27","hashOfConfig":"21"},{"size":749,"mtime":1672117574193,"results":"28","hashOfConfig":"21"},{"size":254,"mtime":1672116947152,"results":"29","hashOfConfig":"21"},{"size":598,"mtime":1672117237589,"results":"30","hashOfConfig":"21"},{"size":1757,"mtime":1672117237605,"results":"31","hashOfConfig":"21"},{"size":3319,"mtime":1672117237646,"results":"32","hashOfConfig":"21"},{"size":451,"mtime":1672117237678,"results":"33","hashOfConfig":"21"},{"size":495,"mtime":1672117237691,"results":"34","hashOfConfig":"21"},{"size":2815,"mtime":1672117237723,"results":"35","hashOfConfig":"21"},{"size":1066,"mtime":1672117237748,"results":"36","hashOfConfig":"21"},{"size":673,"mtime":1672117237769,"results":"37","hashOfConfig":"21"},{"size":377,"mtime":1672117237784,"results":"38","hashOfConfig":"21"},{"size":246,"mtime":1672116947165,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"dqsgg3",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":6,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":1,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\addData.js",["112","113"],[],"import axios from 'axios';\r\nimport getData from './getData';\r\n\r\nexport default function addData(myText, setTodo) {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  axios({\r\n    method: 'post',\r\n    url: 'https://pre-onboarding-selection-task.shop/todos',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    data: { todo: myText },\r\n  })\r\n    .then((response) => {\r\n      getData(setTodo);\r\n    })\r\n    .catch((error) => {\r\n      alert(error.response.data.message);\r\n    });\r\n}\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\deleteData.js",["114"],[],"import axios from 'axios';\r\nimport getData from './getData';\r\n\r\nexport default function deleteData(setTodo, listId) {\r\n  axios({\r\n    method: 'delete',\r\n    url: `https://pre-onboarding-selection-task.shop/todos/${listId}`,\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      getData(setTodo);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response.data.message);\r\n    });\r\n}\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\getData.js",[],[],"C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\reviseCheck.js",["115"],[],"import axios from 'axios';\r\nimport getData from './getData';\r\n\r\nexport default function reviseCheck(setTodo, listBox) {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  axios({\r\n    method: 'put',\r\n    url: `https://pre-onboarding-selection-task.shop/todos/${listBox.id}`,\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    data: { todo: listBox.todo, isCompleted: !listBox.isCompleted },\r\n  })\r\n    .then((response) => {\r\n      getData(setTodo);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response.data.message);\r\n    });\r\n}\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\reviseText.js",["116"],[],"import axios from 'axios';\r\nimport getData from './getData';\r\n\r\nexport default function reviseText(\r\n  listBox,\r\n  reviseTextBox,\r\n  setTodo,\r\n  setUserNumber,\r\n) {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  axios({\r\n    method: 'put',\r\n    url: `https://pre-onboarding-selection-task.shop/todos/${listBox.id}`,\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    data: { todo: reviseTextBox, isCompleted: listBox.isCompleted },\r\n  })\r\n    .then((response) => {\r\n      getData(setTodo);\r\n      setUserNumber(0);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response.data.message);\r\n    });\r\n}\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\signIn.js",["117"],[],"import axios from 'axios';\r\n\r\nexport default function signIn(Id, Pw) {\r\n  axios({\r\n    method: 'post',\r\n    url: 'https://pre-onboarding-selection-task.shop/auth/signin',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    data: {\r\n      email: Id,\r\n      password: Pw,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      localStorage.setItem('access_token', response.data.access_token);\r\n      window.location.reload();\r\n      console.log('로그인성공');\r\n    })\r\n    .catch((error) => {\r\n      alert(error.response.data.message);\r\n    });\r\n}\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\api\\signUp.js",["118","119","120"],[],"import axios from 'axios';\r\n\r\nexport default function signUp(signUpId, signUpPw, setModal) {\r\n  axios({\r\n    method: 'post',\r\n    url: 'https://pre-onboarding-selection-task.shop/auth/signup',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    data: {\r\n      email: signUpId,\r\n      password: signUpPw,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      alert('회원가입을 완료하셧습니다.');\r\n      setModal(false);\r\n    })\r\n    .catch((error) => {\r\n      alert(error.response.data.message);\r\n    });\r\n}\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\App.js",["121"],[],"C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\App.test.js",["122","123"],[],"import { render, screen } from '@testing-library/react';\r\nimport App from './App';\r\n\r\ntest('renders learn react link', () => {\r\n  render(<App />);\r\n  const linkElement = screen.getByText(/learn react/i);\r\n  expect(linkElement).toBeInTheDocument();\r\n});\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\index.js",["124"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\login\\components\\SignIn.js",["125","126","127","128","129","130","131","132","133","134"],[],"import { useState } from 'react';\r\nimport signIn from '../../../api/signIn';\r\nimport './SignIn.scss';\r\n\r\nfunction SignIn(props) {\r\n  const [Id, setId] = useState('');\r\n  const [Pw, setPw] = useState('');\r\n\r\n  const loginFun = () => {\r\n    if (Id === '') {\r\n      alert('Id를 입력해주세요.');\r\n    } else if (Id.includes('@') === false) {\r\n      alert('@을 포함한 이메일 형식으로 입력해주세요.');\r\n    } else if (Id.includes('@') === true) {\r\n      if (Pw.length === 0) {\r\n        alert('비밀번호를 입력해주세요.');\r\n      } else if (Pw.length < 8) {\r\n        alert('비밀번호는 8자리이상입니다.');\r\n      } else if (Pw.length >= 8) {\r\n        signIn(Id, Pw);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginPage\">\r\n      <div style={{ height: '1px' }}></div>\r\n      <div className=\"loginContainer\">\r\n        <h1>CI/CD 테스트 임닙다</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"UserID\"\r\n          onInput={(e) => {\r\n            setId(e.target.value);\r\n          }}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          onInput={(e) => {\r\n            setPw(e.target.value);\r\n          }}\r\n        />\r\n        <div\r\n          className=\"loginBtn\"\r\n          onClick={() => {\r\n            loginFun();\r\n          }}\r\n        >\r\n          Login\r\n        </div>\r\n\r\n        <div className=\"loginAccount\">\r\n          Not a member?{' '}\r\n          <span\r\n            className=\"loginAccountBtn\"\r\n            onClick={() => {\r\n              props.setModal(true);\r\n            }}\r\n          >\r\n            {' '}\r\n            Creat Account\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SignIn;\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\login\\components\\SignUpModal.js",["135","136","137","138","139","140","141","142"],[],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\r\nimport { useEffect, useState } from 'react';\r\nimport signUp from '../../../api/signUp';\r\nimport './SignUpModal.scss';\r\nfunction SignUpModal(props) {\r\n  const modal = props.modal;\r\n  const setModal = props.setModal;\r\n\r\n  //SignUp state\r\n  const [signUpId, setSignUpId] = useState('');\r\n  const [IdMessage, setIdMessage] = useState('');\r\n  const [IdCheck, setIdCheck] = useState(false);\r\n\r\n  const [signUpPw, setSignUpPw] = useState('');\r\n  const [PwMessage, setPwMessage] = useState('');\r\n  const [PwCheck, setPwCheck] = useState(false);\r\n\r\n  //회원가입 버튼 활성화/비활성화\r\n  const [activateBTN, setActivateBTN] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (IdCheck && PwCheck === true) {\r\n      setActivateBTN(false);\r\n    } else {\r\n      setActivateBTN(true);\r\n    }\r\n  }, [IdCheck, PwCheck]);\r\n\r\n  // 아이디 유효성검사 function\r\n  const EmailCheck = (e) => {\r\n    const inputId = e.target.value;\r\n\r\n    if (inputId === '') {\r\n      setIdMessage('');\r\n    } else if (inputId.includes('@') === false) {\r\n      setIdCheck(false);\r\n      setIdMessage('@을 포함한 이메일형식의 Id를 입력해주세요.');\r\n    } else if (inputId.includes('@') === true) {\r\n      setIdCheck(true);\r\n      setIdMessage('올바른 양식입니다.');\r\n      setSignUpId(inputId);\r\n    }\r\n  };\r\n\r\n  // 비밀번호 유효성검사 function\r\n  const passWordCheck = (e) => {\r\n    const inputPw = e.target.value;\r\n    if (inputPw === '') {\r\n      setPwMessage('');\r\n    } else if (inputPw.length < 8) {\r\n      setPwCheck(false);\r\n      setPwMessage('8자리 이상으로 입력해주세요.');\r\n    } else {\r\n      setPwCheck(true);\r\n      setPwMessage('올바른 양식입니다.');\r\n      setSignUpPw(inputPw);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={modal === true ? 'BlackModal' : 'Disabled-BlackModal'}>\r\n      <div className=\"whiteModal\">\r\n        <FontAwesomeIcon\r\n          icon={faXmark}\r\n          className=\"xMark\"\r\n          onClick={() => {\r\n            setModal(false);\r\n          }}\r\n        />\r\n        <h2>회원가입</h2>\r\n        <div className=\"alert\">\r\n          <p>* 아이디</p>{' '}\r\n          <p className={IdCheck === true ? 'correct' : 'non-correct'}>\r\n            {IdMessage}\r\n          </p>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email을 입력해주세요.\"\r\n          onInput={(e) => {\r\n            EmailCheck(e);\r\n          }}\r\n        />\r\n\r\n        <div className=\"alert\">\r\n          <p>* 비밀번호</p>{' '}\r\n          <p className={PwCheck === true ? 'correct' : 'non-correct'}>\r\n            {PwMessage}\r\n          </p>\r\n        </div>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password를 입력해주세요.\"\r\n          onInput={(e) => {\r\n            passWordCheck(e);\r\n          }}\r\n        />\r\n\r\n        <button\r\n          className={\r\n            activateBTN === true ? 'disabled-accountBTN' : 'accountBTN'\r\n          }\r\n          disabled={activateBTN}\r\n          onClick={() => {\r\n            signUp(signUpId, signUpPw, setModal);\r\n          }}\r\n        >\r\n          제출\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SignUpModal;\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\login\\LoginPage.js",["143","144"],[],"import { useState } from 'react';\r\nimport SignUpModal from './components/SignUpModal';\r\nimport SignIn from './components/SignIn';\r\n\r\nfunction LoginPage() {\r\n  const [modal, setModal] = useState(false);\r\n  return (\r\n    <>\r\n      {/* 회원가입 모달 */}\r\n      <SignUpModal modal={modal} setModal={setModal}></SignUpModal>\r\n      {/* 로그인페이지 */}\r\n      <SignIn setModal={setModal}></SignIn>\r\n    </>\r\n  );\r\n}\r\nexport default LoginPage;\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\todo\\components\\LogoutBtn.js",["145"],[],"import './LogoutBtn.scss';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LogoutBtn() {\r\n  const navigate = useNavigate();\r\n\r\n  const logout = () => {\r\n    window.localStorage.removeItem('access_token');\r\n    navigate('/');\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"log-out-box\">\r\n      <button\r\n        onClick={() => {\r\n          logout();\r\n        }}\r\n      >\r\n        로그아웃\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default LogoutBtn;\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\todo\\components\\TodoList.js",["146","147","148","149"],[],"import './TodoList.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencil, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { useState } from 'react';\r\nimport deleteData from '../../../api/deleteData';\r\nimport reviseCheck from '../../../api/reviseCheck';\r\nimport reviseText from '../../../api/reviseText';\r\n\r\nfunction TodoList({ Todo, setTodo }) {\r\n  const [userNumber, setUserNumber] = useState();\r\n  const [reviseTextBox, setReviseText] = useState('');\r\n\r\n  return (\r\n    <div className=\"Todo-Container\">\r\n      <div style={{ height: '1px' }}></div>\r\n      {Todo.map((list, index) => {\r\n        return (\r\n          <div className=\"Todo-list\" key={index}>\r\n            {userNumber === list.id ? (\r\n              <span>\r\n                <input\r\n                  className=\"revise-input\"\r\n                  defaultValue={list.todo}\r\n                  onInput={(e) => {\r\n                    setReviseText(e.target.value);\r\n                  }}\r\n                />\r\n                <button\r\n                  className=\"revise-BTN\"\r\n                  onClick={() => {\r\n                    setUserNumber(0);\r\n                  }}\r\n                >\r\n                  취소\r\n                </button>\r\n\r\n                <button\r\n                  className=\"revise-BTN\"\r\n                  onClick={() => {\r\n                    const listBox = list;\r\n                    reviseText(listBox, reviseTextBox, setTodo, setUserNumber);\r\n                  }}\r\n                >\r\n                  확인\r\n                </button>\r\n              </span>\r\n            ) : (\r\n              <>\r\n                {/* 완료 체크버튼 */}\r\n                <FontAwesomeIcon\r\n                  icon={faCheck}\r\n                  className=\"checkIcon\"\r\n                  onClick={() => {\r\n                    const listBox = list;\r\n                    reviseCheck(setTodo, listBox);\r\n                  }}\r\n                />\r\n                <p className={list.isCompleted === false ? null : 'line-on'}>\r\n                  {list.todo}\r\n                </p>\r\n                {/* 수정버튼 */}\r\n                <FontAwesomeIcon\r\n                  icon={faPencil}\r\n                  className=\"pencilIcon\"\r\n                  onClick={() => {\r\n                    setUserNumber(list.id);\r\n                  }}\r\n                />\r\n                {/* 삭제버튼 */}\r\n                <FontAwesomeIcon\r\n                  icon={faTrash}\r\n                  className=\"trashIcon\"\r\n                  onClick={() => {\r\n                    const listId = list.id;\r\n                    deleteData(setTodo, listId);\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\nexport default TodoList;\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\todo\\components\\TodoProducer.js",["150","151","152"],[],"import './TodoProducer.scss';\r\nimport { useState } from 'react';\r\nimport addData from '../../../api/addData';\r\n\r\nfunction TodoProducer({ Todo, setTodo }) {\r\n  const [myText, setMyText] = useState('');\r\n  const onReset = () => {\r\n    setMyText('');\r\n  };\r\n  const updateData = () => {\r\n    if (myText === '') {\r\n      alert('값을 입력해주세요.');\r\n    } else if (Todo.length < 6) {\r\n      addData(myText, setTodo);\r\n      onReset();\r\n    } else {\r\n      alert('7개 이하의 list가 입력가능합니다.');\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"Todo-Logo\">\r\n        <h1>To-Do List</h1>\r\n      </div>\r\n\r\n      <div className=\"Todo-producer\">\r\n        <input\r\n          type=\"text\"\r\n          value={myText}\r\n          placeholder=\"+ Add New Todo...\"\r\n          onInput={(e) => {\r\n            setMyText(e.target.value);\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            updateData();\r\n          }}\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default TodoProducer;\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\page\\todo\\TodoPage.js",["153","154","155"],[],"import '../todo/TodoPage.scss';\r\nimport { useEffect, useState } from 'react';\r\nimport getData from '../../api/getData';\r\nimport LogoutBtn from './components/LogoutBtn';\r\nimport TodoProducer from './components/TodoProducer';\r\nimport TodoList from './components/TodoList';\r\n\r\nfunction TodoPage() {\r\n  const [Todo, setTodo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData(setTodo);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"TodoPage\">\r\n      <div style={{ height: '1px' }}></div>\r\n\r\n      <LogoutBtn />\r\n\r\n      <TodoProducer Todo={Todo} setTodo={setTodo} />\r\n\r\n      <TodoList Todo={Todo} setTodo={setTodo}></TodoList>\r\n    </div>\r\n  );\r\n}\r\nexport default TodoPage;\r\n","C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\KIMDOWAN\\Desktop\\새 폴더\\wanted-pre-onboarding-frontend\\src\\setupTests.js",[],[],{"ruleId":"156","severity":1,"message":"157","line":16,"column":12,"nodeType":"158","messageId":"159","endLine":16,"endColumn":20},{"ruleId":"160","severity":1,"message":"161","line":20,"column":7,"nodeType":"162","messageId":"163","endLine":20,"endColumn":41},{"ruleId":"156","severity":1,"message":"157","line":12,"column":12,"nodeType":"158","messageId":"159","endLine":12,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":16,"column":12,"nodeType":"158","messageId":"159","endLine":16,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":21,"column":12,"nodeType":"158","messageId":"159","endLine":21,"endColumn":20},{"ruleId":"160","severity":1,"message":"161","line":19,"column":7,"nodeType":"162","messageId":"163","endLine":19,"endColumn":41},{"ruleId":"156","severity":1,"message":"157","line":13,"column":12,"nodeType":"158","messageId":"159","endLine":13,"endColumn":20},{"ruleId":"160","severity":1,"message":"161","line":14,"column":7,"nodeType":"162","messageId":"163","endLine":14,"endColumn":30},{"ruleId":"160","severity":1,"message":"161","line":18,"column":7,"nodeType":"162","messageId":"163","endLine":18,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":10,"column":3,"nodeType":"158","endLine":10,"endColumn":12,"suggestions":"166"},{"ruleId":"167","severity":2,"message":"168","line":4,"column":1,"nodeType":"158","messageId":"169","endLine":4,"endColumn":5},{"ruleId":"167","severity":2,"message":"170","line":7,"column":3,"nodeType":"158","messageId":"169","endLine":7,"endColumn":9},{"ruleId":"171","severity":2,"message":"172","line":6,"column":1,"nodeType":"173","endLine":6,"endColumn":50,"fix":"174"},{"ruleId":"160","severity":1,"message":"161","line":11,"column":7,"nodeType":"162","messageId":"163","endLine":11,"endColumn":27},{"ruleId":"160","severity":1,"message":"161","line":13,"column":7,"nodeType":"162","messageId":"163","endLine":13,"endColumn":39},{"ruleId":"160","severity":1,"message":"161","line":16,"column":9,"nodeType":"162","messageId":"163","endLine":16,"endColumn":31},{"ruleId":"160","severity":1,"message":"161","line":18,"column":9,"nodeType":"162","messageId":"163","endLine":18,"endColumn":33},{"ruleId":"175","severity":2,"message":"176","line":27,"column":7,"nodeType":"177","messageId":"178","endLine":27,"endColumn":38,"fix":"179"},{"ruleId":"180","severity":2,"message":"181","line":44,"column":9,"nodeType":"177","endLine":49,"endColumn":10},{"ruleId":"182","severity":2,"message":"183","line":44,"column":9,"nodeType":"177","endLine":49,"endColumn":10},{"ruleId":"180","severity":2,"message":"181","line":55,"column":11,"nodeType":"177","endLine":60,"endColumn":12},{"ruleId":"182","severity":2,"message":"183","line":55,"column":11,"nodeType":"177","endLine":60,"endColumn":12},{"ruleId":"184","severity":2,"message":"185","line":58,"column":15,"nodeType":"186","messageId":"187","endLine":58,"endColumn":29},{"ruleId":"188","severity":2,"message":"189","line":5,"column":1,"nodeType":null,"fix":"190"},{"ruleId":"191","severity":2,"message":"192","line":7,"column":9,"nodeType":"193","messageId":"194","endLine":7,"endColumn":28,"fix":"195"},{"ruleId":"184","severity":2,"message":"185","line":7,"column":17,"nodeType":"186","messageId":"187","endLine":7,"endColumn":28},{"ruleId":"191","severity":2,"message":"192","line":8,"column":9,"nodeType":"193","messageId":"194","endLine":8,"endColumn":34,"fix":"196"},{"ruleId":"184","severity":2,"message":"185","line":8,"column":20,"nodeType":"186","messageId":"187","endLine":8,"endColumn":34},{"ruleId":"197","severity":2,"message":"198","line":10,"column":3,"nodeType":"199","messageId":"200","endLine":10,"endColumn":17,"fix":"201"},{"ruleId":"197","severity":2,"message":"198","line":19,"column":3,"nodeType":"199","messageId":"200","endLine":19,"endColumn":21,"fix":"202"},{"ruleId":"203","severity":2,"message":"204","line":100,"column":9,"nodeType":"205","messageId":"206","endLine":110,"endColumn":18},{"ruleId":"175","severity":2,"message":"176","line":10,"column":7,"nodeType":"177","messageId":"178","endLine":10,"endColumn":54,"fix":"207"},{"ruleId":"175","severity":2,"message":"176","line":12,"column":7,"nodeType":"177","messageId":"178","endLine":12,"endColumn":35,"fix":"208"},{"ruleId":"203","severity":2,"message":"204","line":15,"column":7,"nodeType":"205","messageId":"206","endLine":21,"endColumn":16},{"ruleId":"175","severity":2,"message":"176","line":15,"column":7,"nodeType":"177","messageId":"178","endLine":15,"endColumn":38,"fix":"209"},{"ruleId":"210","severity":2,"message":"211","line":18,"column":43,"nodeType":"158","messageId":"212","endLine":18,"endColumn":48},{"ruleId":"203","severity":2,"message":"204","line":28,"column":17,"nodeType":"205","messageId":"206","endLine":35,"endColumn":26},{"ruleId":"203","severity":2,"message":"204","line":37,"column":17,"nodeType":"205","messageId":"206","endLine":45,"endColumn":26},{"ruleId":"160","severity":1,"message":"161","line":12,"column":7,"nodeType":"162","messageId":"163","endLine":12,"endColumn":26},{"ruleId":"160","severity":1,"message":"161","line":17,"column":7,"nodeType":"162","messageId":"163","endLine":17,"endColumn":37},{"ruleId":"203","severity":2,"message":"204","line":35,"column":9,"nodeType":"205","messageId":"206","endLine":41,"endColumn":18},{"ruleId":"213","severity":2,"message":"214","line":1,"column":8,"nodeType":"215","endLine":1,"endColumn":31,"fix":"216"},{"ruleId":"175","severity":2,"message":"176","line":17,"column":7,"nodeType":"177","messageId":"178","endLine":17,"endColumn":38,"fix":"217"},{"ruleId":"175","severity":2,"message":"176","line":23,"column":7,"nodeType":"177","messageId":"178","endLine":23,"endColumn":47,"fix":"218"},"no-unused-vars","'response' is defined but never used.","Identifier","unusedVar","no-alert","Unexpected alert.","CallExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["219"],"no-undef","'test' is not defined.","undef","'expect' is not defined.","import/order","`react-router-dom` import should occur before import of `./App`","ImportDeclaration",{"range":"220","text":"221"},"react/self-closing-comp","Empty components are self-closing","JSXOpeningElement","notSelfClosing",{"range":"222","text":"223"},"jsx-a11y/click-events-have-key-events","Visible, non-interactive elements with click handlers must have at least one keyboard listener.","jsx-a11y/no-static-element-interactions","Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","react/destructuring-assignment","Must use destructuring props assignment","MemberExpression","useDestructAssignment","import/newline-after-import","Expected 1 empty line after import statement not followed by another import.",{"range":"224","text":"225"},"prefer-destructuring","Use object destructuring.","VariableDeclarator","preferDestructuring",{"range":"226","text":"227"},{"range":"228","text":"229"},"spaced-comment","Expected exception block, space or tab after '//' in comment.","Line","expectedExceptionAfter",{"range":"230","text":"231"},{"range":"232","text":"231"},"react/button-has-type","Missing an explicit type attribute for button","JSXElement","missingType",{"range":"233","text":"223"},{"range":"234","text":"223"},{"range":"235","text":"223"},"react/no-array-index-key","Do not use Array index in keys","noArrayIndex","import/no-useless-path-segments","Useless path segments for \"../todo/TodoPage.scss\", should be \"./TodoPage.scss\"","Literal",{"range":"236","text":"237"},{"range":"238","text":"223"},{"range":"239","text":"223"},{"desc":"240","fix":"241"},[93,220],"import { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n",[717,724]," />",[246,246],"\n",[287,306],"{modal} = props",[317,342],"{setModal} = props",[351,351]," ",[673,673],[298,313],[370,380],[602,609],[7,30],"\"./TodoPage.scss\"",[477,484],[612,624],"Add dependencies array: []",{"range":"242","text":"243"},[394,394],", []"]